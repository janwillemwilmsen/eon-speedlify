/* @tailwind base;

@tailwind components;

@tailwind utilities; */


/* ! tailwindcss v2.1.4 | MIT License | https://tailwindcss.com */


/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */


/*
Document
========
*/


/**
Use a better box model (opinionated).
*/


*,
::before,
::after {
	box-sizing: border-box;
}


/**
Use a more readable tab size (opinionated).
*/


html {
	-moz-tab-size: 4;
	-o-tab-size: 4;
	   tab-size: 4;
}


/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/


html {
	line-height: 1.15; /* 1 */
	-webkit-text-size-adjust: 100%; /* 2 */
}


/*
Sections
========
*/


/**
Remove the margin in all browsers.
*/


body {
	margin: 0;
}


/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/


body {
	font-family:
		system-ui,
		-apple-system, /* Firefox supports this but not yet `system-ui` */
		'Segoe UI',
		Roboto,
		Helvetica,
		Arial,
		sans-serif,
		'Apple Color Emoji',
		'Segoe UI Emoji';
}


/*
Grouping content
================
*/


/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/


hr {
	height: 0; /* 1 */
	color: inherit; /* 2 */
}


/*
Text-level semantics
====================
*/


/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/


abbr[title] {
	-webkit-text-decoration: underline dotted;
	        text-decoration: underline dotted;
}


/**
Add the correct font weight in Edge and Safari.
*/


b,
strong {
	font-weight: bolder;
}


/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/


code,
kbd,
samp,
pre {
	font-family:
		ui-monospace,
		SFMono-Regular,
		Consolas,
		'Liberation Mono',
		Menlo,
		monospace; /* 1 */
	font-size: 1em; /* 2 */
}


/**
Add the correct font size in all browsers.
*/


small {
	font-size: 80%;
}


/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/


sub,
sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}


sub {
	bottom: -0.25em;
}


sup {
	top: -0.5em;
}


/*
Tabular data
============
*/


/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/


table {
	text-indent: 0; /* 1 */
	border-color: inherit; /* 2 */
}


/*
Forms
=====
*/


/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/


button,
input,
optgroup,
select,
textarea {
	font-family: inherit; /* 1 */
	font-size: 100%; /* 1 */
	line-height: 1.15; /* 1 */
	margin: 0; /* 2 */
}


/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/


button,
select { /* 1 */
	text-transform: none;
}


/**
Correct the inability to style clickable types in iOS and Safari.
*/


button,
[type='button'],
[type='reset'],
[type='submit'] {
	-webkit-appearance: button;
}


/**
Remove the inner border and padding in Firefox.
*/


::-moz-focus-inner {
	border-style: none;
	padding: 0;
}


/**
Restore the focus styles unset by the previous rule.
*/


:-moz-focusring {
	outline: 1px dotted ButtonText;
}


/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/


:-moz-ui-invalid {
	box-shadow: none;
}


/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/


legend {
	padding: 0;
}


/**
Add the correct vertical alignment in Chrome and Firefox.
*/


progress {
	vertical-align: baseline;
}


/**
Correct the cursor style of increment and decrement buttons in Safari.
*/


::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
	height: auto;
}


/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/


[type='search'] {
	-webkit-appearance: textfield; /* 1 */
	outline-offset: -2px; /* 2 */
}


/**
Remove the inner padding in Chrome and Safari on macOS.
*/


::-webkit-search-decoration {
	-webkit-appearance: none;
}


/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/


::-webkit-file-upload-button {
	-webkit-appearance: button; /* 1 */
	font: inherit; /* 2 */
}


/*
Interactive
===========
*/


/*
Add the correct display in Chrome and Safari.
*/


summary {
	display: list-item;
}


/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */


/**
 * Removes the default spacing and border for appropriate elements.
 */


blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}


button {
  background-color: transparent;
  background-image: none;
}


/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */


button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}


fieldset {
  margin: 0;
  padding: 0;
}


ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}


/**
 * Tailwind custom reset styles
 */


/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */


html {
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 1 */
  line-height: 1.5; /* 2 */
}


/**
 * Inherit font-family and line-height from `html` so users can set them as
 * a class directly on the `html` element.
 */


body {
  font-family: inherit;
  line-height: inherit;
}


/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */


*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}


/*
 * Ensure horizontal rules are visible by default
 */


hr {
  border-top-width: 1px;
}


/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */


img {
  border-style: solid;
}


textarea {
  resize: vertical;
}


input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  color: #9ca3af;
}


input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;
  color: #9ca3af;
}


input::placeholder,
textarea::placeholder {
  opacity: 1;
  color: #9ca3af;
}


button,
[role="button"] {
  cursor: pointer;
}


table {
  border-collapse: collapse;
}


h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}


/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */


a {
  color: inherit;
  text-decoration: inherit;
}


/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */


button,
input,
optgroup,
select,
textarea {
  padding: 0;
  line-height: inherit;
  color: inherit;
}


/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */


pre,
code,
kbd,
samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}


/**
 * Make replaced elements `display: block` by default as that's
 * the behavior you want almost all of the time. Inspired by
 * CSS Remedy, with `svg` added as well.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */


img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  vertical-align: middle;
}


/**
 * Constrain images and videos to the parent width and preserve
 * their intrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */


img,
video {
  max-width: 100%;
  height: auto;
}


* {
	--tw-shadow: 0 0 #0000;
	--tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: rgba(59, 130, 246, 0.5);
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
}
.container {
	width: 100%;
}
@media (min-width: 640px) {


	.container {
		max-width: 640px;
	}
}
@media (min-width: 768px) {


	.container {
		max-width: 768px;
	}
}
@media (min-width: 1024px) {


	.container {
		max-width: 1024px;
	}
}
@media (min-width: 1280px) {


	.container {
		max-width: 1280px;
	}
}
@media (min-width: 1536px) {


	.container {
		max-width: 1536px;
	}
}
.prose {}
.prose-sm {}
.prose-lg {}
.prose-xl {}
.prose-2xl {}
.prose-red {}
.prose-yellow {}
.prose-green {}
.prose-blue {}
.prose-indigo {}
.prose-purple {}
.prose-pink {}
.prose-dark {
	color: #f3f4f6;
}
.prose-dark a {
	color: #dbeafe;
}
.prose-dark a:hover {
	color: #dbeafe;
}
.sr-only {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border-width: 0;
}
.not-sr-only {
	position: static;
	width: auto;
	height: auto;
	padding: 0;
	margin: 0;
	overflow: visible;
	clip: auto;
	white-space: normal;
}
.pointer-events-none {
	pointer-events: none;
}
.pointer-events-auto {
	pointer-events: auto;
}
.invisible {
	visibility: hidden;
}
.visible {
	visibility: visible;
}
.\!visible {
	visibility: visible !important;
}
.static {
	position: static;
}
.relative {
	position: relative;
}
.sticky {
	position: sticky;
}
.fixed {
	position: fixed;
}
.absolute {
	position: absolute;
}
.\!fixed {
	position: fixed !important;
}
.top-0 {
	top: 0px;
}
.float-right {
	float: right;
}
.float-left {
	float: left;
}
.float-none {
	float: none;
}
.clear-left {
	clear: left;
}
.clear-right {
	clear: right;
}
.clear-both {
	clear: both;
}
.clear-none {
	clear: none;
}
.m-2 {
	margin: 0.5rem;
}
.m-1 {
	margin: 0.25rem;
}
.m-3 {
	margin: 0.75rem;
}
.m-8 {
	margin: 2rem;
}
.m-14 {
	margin: 3.5rem;
}
.m-16 {
	margin: 4rem;
}
.m-5 {
	margin: 1.25rem;
}
.mx-auto {
	margin-left: auto;
	margin-right: auto;
}
.my-10 {
	margin-top: 2.5rem;
	margin-bottom: 2.5rem;
}
.mt-10 {
	margin-top: 2.5rem;
}
.mt-2 {
	margin-top: 0.5rem;
}
.mr-2 {
	margin-right: 0.5rem;
}
.mt-4 {
	margin-top: 1rem;
}
.ml-3 {
	margin-left: 0.75rem;
}
.ml-8 {
	margin-left: 2rem;
}
.mt-6 {
	margin-top: 1.5rem;
}
.box-border {
	box-sizing: border-box;
}
.box-content {
	box-sizing: content-box;
}
.table {
	display: table;
}
.flex {
	display: flex;
}
.inline-grid {
	display: inline-grid;
}
.inline {
	display: inline;
}
.block {
	display: block;
}
.\!table {
	display: table !important;
}
.grid {
	display: grid;
}
.inline-flex {
	display: inline-flex;
}
.\!grid {
	display: grid !important;
}
.inline-block {
	display: inline-block;
}
.contents {
	display: contents;
}
.\!block {
	display: block !important;
}
.flow-root {
	display: flow-root;
}
.\!inline {
	display: inline !important;
}
.table-caption {
	display: table-caption;
}
.table-cell {
	display: table-cell;
}
.table-column {
	display: table-column;
}
.table-column-group {
	display: table-column-group;
}
.table-footer-group {
	display: table-footer-group;
}
.table-header-group {
	display: table-header-group;
}
.table-row-group {
	display: table-row-group;
}
.table-row {
	display: table-row;
}
.hidden {
	display: none;
}
.\!hidden {
	display: none !important;
}
.h-20 {
	height: 5rem;
}
.h-8 {
	height: 2rem;
}
.h-10 {
	height: 2.5rem;
}
.h-1 {
	height: 0.25rem;
}
.h-2 {
	height: 0.5rem;
}
.h-3 {
	height: 0.75rem;
}
.h-5 {
	height: 1.25rem;
}
.h-4 {
	height: 1rem;
}
.h-0 {
	height: 0px;
}
.max-h-0 {
	max-height: 0px;
}
.w-11\/12 {
	width: 91.666667%;
}
.w-full {
	width: 100%;
}
.w-8 {
	width: 2rem;
}
.w-24 {
	width: 6rem;
}
.w-40 {
	width: 10rem;
}
.w-2\/12 {
	width: 16.666667%;
}
.w-4\/12 {
	width: 33.333333%;
}
.w-6\/12 {
	width: 50%;
}
.w-1\/2 {
	width: 50%;
}
.max-w-2xl {
	max-width: 42rem;
}
.flex-shrink {
	flex-shrink: 1;
}
.flex-grow {
	flex-grow: 1;
}
.table-auto {
	table-layout: auto;
}
.table-fixed {
	table-layout: fixed;
}
.border-collapse {
	border-collapse: collapse;
}
.border-separate {
	border-collapse: separate;
}
.transform {
	--tw-translate-x: 0;
	--tw-translate-y: 0;
	--tw-rotate: 0;
	--tw-skew-x: 0;
	--tw-skew-y: 0;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.transform-gpu {
	--tw-translate-x: 0;
	--tw-translate-y: 0;
	--tw-rotate: 0;
	--tw-skew-x: 0;
	--tw-skew-y: 0;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.transform-none {
	transform: none;
}
@-webkit-keyframes pulse {


	50% {
		opacity: .5;
	}
}
@keyframes pulse {


	50% {
		opacity: .5;
	}
}
.animate-pulse {
	-webkit-animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
	        animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}
.cursor-pointer {
	cursor: pointer;
}
.select-none {
	-webkit-user-select: none;
	   -moz-user-select: none;
	    -ms-user-select: none;
	        user-select: none;
}
.select-text {
	-webkit-user-select: text;
	   -moz-user-select: text;
	    -ms-user-select: text;
	        user-select: text;
}
.select-all {
	-webkit-user-select: all;
	   -moz-user-select: all;
	        user-select: all;
}
.select-auto {
	-webkit-user-select: auto;
	   -moz-user-select: auto;
	    -ms-user-select: auto;
	        user-select: auto;
}
.resize {
	resize: both;
}
.resize-none {
	resize: none;
}
.resize-y {
	resize: vertical;
}
.resize-x {
	resize: horizontal;
}
.list-inside {
	list-style-position: inside;
}
.list-outside {
	list-style-position: outside;
}
.appearance-none {
	-webkit-appearance: none;
	   -moz-appearance: none;
	        appearance: none;
}
.grid-flow-row {
	grid-auto-flow: row;
}
.grid-flow-col {
	grid-auto-flow: column;
}
.grid-flow-row-dense {
	grid-auto-flow: row dense;
}
.grid-flow-col-dense {
	grid-auto-flow: column dense;
}
.grid-cols-1 {
	grid-template-columns: repeat(1, minmax(0, 1fr));
}
.flex-row {
	flex-direction: row;
}
.flex-col {
	flex-direction: column;
}
.flex-row-reverse {
	flex-direction: row-reverse;
}
.flex-col-reverse {
	flex-direction: column-reverse;
}
.flex-nowrap {
	flex-wrap: nowrap;
}
.flex-wrap {
	flex-wrap: wrap;
}
.flex-wrap-reverse {
	flex-wrap: wrap-reverse;
}
.place-content-center {
	place-content: center;
}
.place-content-start {
	place-content: start;
}
.place-content-end {
	place-content: end;
}
.place-content-between {
	place-content: space-between;
}
.place-content-around {
	place-content: space-around;
}
.place-content-evenly {
	place-content: space-evenly;
}
.place-content-stretch {
	place-content: stretch;
}
.place-items-start {
	place-items: start;
}
.place-items-end {
	place-items: end;
}
.place-items-center {
	place-items: center;
}
.place-items-stretch {
	place-items: stretch;
}
.place-items-auto {
	place-items: auto;
}
.content-center {
	align-content: center;
}
.content-start {
	align-content: flex-start;
}
.content-end {
	align-content: flex-end;
}
.content-between {
	align-content: space-between;
}
.content-around {
	align-content: space-around;
}
.content-evenly {
	align-content: space-evenly;
}
.items-center {
	align-items: center;
}
.items-start {
	align-items: flex-start;
}
.items-end {
	align-items: flex-end;
}
.items-baseline {
	align-items: baseline;
}
.items-stretch {
	align-items: stretch;
}
.justify-center {
	justify-content: center;
}
.justify-start {
	justify-content: flex-start;
}
.justify-end {
	justify-content: flex-end;
}
.justify-between {
	justify-content: space-between;
}
.justify-around {
	justify-content: space-around;
}
.justify-evenly {
	justify-content: space-evenly;
}
.justify-items-start {
	justify-items: start;
}
.justify-items-end {
	justify-items: end;
}
.justify-items-center {
	justify-items: center;
}
.justify-items-stretch {
	justify-items: stretch;
}
.justify-items-auto {
	justify-items: auto;
}
.gap-x-4 {
	-moz-column-gap: 1rem;
	     column-gap: 1rem;
}
.space-y-4 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-y-reverse: 0;
	margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
	margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}
.space-y-3 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-y-reverse: 0;
	margin-top: calc(0.75rem * calc(1 - var(--tw-space-y-reverse)));
	margin-bottom: calc(0.75rem * var(--tw-space-y-reverse));
}
.space-y-reverse > :not([hidden]) ~ :not([hidden]) {
	--tw-space-y-reverse: 1;
}
.space-x-reverse > :not([hidden]) ~ :not([hidden]) {
	--tw-space-x-reverse: 1;
}
.divide-x > :not([hidden]) ~ :not([hidden]) {
	--tw-divide-x-reverse: 0;
	border-right-width: calc(1px * var(--tw-divide-x-reverse));
	border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
}
.divide-y > :not([hidden]) ~ :not([hidden]) {
	--tw-divide-y-reverse: 0;
	border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
	border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}
.divide-y-reverse > :not([hidden]) ~ :not([hidden]) {
	--tw-divide-y-reverse: 1;
}
.divide-x-reverse > :not([hidden]) ~ :not([hidden]) {
	--tw-divide-x-reverse: 1;
}
.divide-solid > :not([hidden]) ~ :not([hidden]) {
	border-style: solid;
}
.divide-dashed > :not([hidden]) ~ :not([hidden]) {
	border-style: dashed;
}
.divide-dotted > :not([hidden]) ~ :not([hidden]) {
	border-style: dotted;
}
.divide-double > :not([hidden]) ~ :not([hidden]) {
	border-style: double;
}
.divide-none > :not([hidden]) ~ :not([hidden]) {
	border-style: none;
}
.divide > :not([hidden]) ~ :not([hidden]) {
	--tw-divide-opacity: 1;
	border-color: rgba(229, 231, 235, var(--tw-divide-opacity));
}
.place-self-auto {
	place-self: auto;
}
.place-self-start {
	place-self: start;
}
.place-self-end {
	place-self: end;
}
.place-self-center {
	place-self: center;
}
.place-self-stretch {
	place-self: stretch;
}
.self-auto {
	align-self: auto;
}
.self-start {
	align-self: flex-start;
}
.self-end {
	align-self: flex-end;
}
.self-center {
	align-self: center;
}
.self-stretch {
	align-self: stretch;
}
.justify-self-auto {
	justify-self: auto;
}
.justify-self-start {
	justify-self: start;
}
.justify-self-end {
	justify-self: end;
}
.justify-self-center {
	justify-self: center;
}
.justify-self-stretch {
	justify-self: stretch;
}
.overflow-hidden {
	overflow: hidden;
}
.overflow-auto {
	overflow: auto;
}
.overflow-visible {
	overflow: visible;
}
.overflow-scroll {
	overflow: scroll;
}
.overflow-x-auto {
	overflow-x: auto;
}
.overflow-y-auto {
	overflow-y: auto;
}
.overflow-x-hidden {
	overflow-x: hidden;
}
.overflow-y-hidden {
	overflow-y: hidden;
}
.overflow-x-visible {
	overflow-x: visible;
}
.overflow-y-visible {
	overflow-y: visible;
}
.overflow-x-scroll {
	overflow-x: scroll;
}
.overflow-y-scroll {
	overflow-y: scroll;
}
.overscroll-auto {
	-ms-scroll-chaining: chained;
	    overscroll-behavior: auto;
}
.overscroll-contain {
	-ms-scroll-chaining: none;
	    overscroll-behavior: contain;
}
.overscroll-none {
	-ms-scroll-chaining: none;
	    overscroll-behavior: none;
}
.overscroll-y-auto {
	overscroll-behavior-y: auto;
}
.overscroll-y-contain {
	overscroll-behavior-y: contain;
}
.overscroll-y-none {
	overscroll-behavior-y: none;
}
.overscroll-x-auto {
	overscroll-behavior-x: auto;
}
.overscroll-x-contain {
	overscroll-behavior-x: contain;
}
.overscroll-x-none {
	overscroll-behavior-x: none;
}
.truncate {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}
.overflow-ellipsis {
	text-overflow: ellipsis;
}
.overflow-clip {
	text-overflow: clip;
}
.whitespace-normal {
	white-space: normal;
}
.whitespace-nowrap {
	white-space: nowrap;
}
.whitespace-pre {
	white-space: pre;
}
.whitespace-pre-line {
	white-space: pre-line;
}
.whitespace-pre-wrap {
	white-space: pre-wrap;
}
.break-normal {
	overflow-wrap: normal;
	word-break: normal;
}
.break-words {
	overflow-wrap: break-word;
}
.break-all {
	word-break: break-all;
}
.rounded-xl {
	border-radius: 0.75rem;
}
.rounded-md {
	border-radius: 0.375rem;
}
.rounded {
	border-radius: 0.25rem;
}
.rounded-t {
	border-top-left-radius: 0.25rem;
	border-top-right-radius: 0.25rem;
}
.rounded-r {
	border-top-right-radius: 0.25rem;
	border-bottom-right-radius: 0.25rem;
}
.rounded-b {
	border-bottom-right-radius: 0.25rem;
	border-bottom-left-radius: 0.25rem;
}
.rounded-l {
	border-top-left-radius: 0.25rem;
	border-bottom-left-radius: 0.25rem;
}
.rounded-tl {
	border-top-left-radius: 0.25rem;
}
.rounded-tr {
	border-top-right-radius: 0.25rem;
}
.rounded-br {
	border-bottom-right-radius: 0.25rem;
}
.rounded-bl {
	border-bottom-left-radius: 0.25rem;
}
.border {
	border-width: 1px;
}
.border-t {
	border-top-width: 1px;
}
.border-b {
	border-bottom-width: 1px;
}
.border-r {
	border-right-width: 1px;
}
.border-l {
	border-left-width: 1px;
}
.border-solid {
	border-style: solid;
}
.border-dashed {
	border-style: dashed;
}
.border-dotted {
	border-style: dotted;
}
.border-double {
	border-style: double;
}
.border-none {
	border-style: none;
}
.border-gray-200 {
	--tw-border-opacity: 1;
	border-color: rgba(229, 231, 235, var(--tw-border-opacity));
}
.border-gray-500 {
	--tw-border-opacity: 1;
	border-color: rgba(107, 114, 128, var(--tw-border-opacity));
}
.border-opacity-50 {
	--tw-border-opacity: 0.5;
}
.bg-blue-600 {
	--tw-bg-opacity: 1;
	background-color: rgba(37, 99, 235, var(--tw-bg-opacity));
}
.bg-green-800 {
	--tw-bg-opacity: 1;
	background-color: rgba(6, 95, 70, var(--tw-bg-opacity));
}
.bg-green-700 {
	--tw-bg-opacity: 1;
	background-color: rgba(4, 120, 87, var(--tw-bg-opacity));
}
.bg-green-600 {
	--tw-bg-opacity: 1;
	background-color: rgba(5, 150, 105, var(--tw-bg-opacity));
}
.bg-green-500 {
	--tw-bg-opacity: 1;
	background-color: rgba(16, 185, 129, var(--tw-bg-opacity));
}
.bg-gray-800 {
	--tw-bg-opacity: 1;
	background-color: rgba(31, 41, 55, var(--tw-bg-opacity));
}
.bg-purple-700 {
	--tw-bg-opacity: 1;
	background-color: rgba(109, 40, 217, var(--tw-bg-opacity));
}
.bg-pink-700 {
	--tw-bg-opacity: 1;
	background-color: rgba(190, 24, 93, var(--tw-bg-opacity));
}
.bg-yellow-400 {
	--tw-bg-opacity: 1;
	background-color: rgba(251, 191, 36, var(--tw-bg-opacity));
}
.bg-green-400 {
	--tw-bg-opacity: 1;
	background-color: rgba(52, 211, 153, var(--tw-bg-opacity));
}
.bg-purple-400 {
	--tw-bg-opacity: 1;
	background-color: rgba(167, 139, 250, var(--tw-bg-opacity));
}
.bg-gray-700 {
	--tw-bg-opacity: 1;
	background-color: rgba(55, 65, 81, var(--tw-bg-opacity));
}
.bg-gray-600 {
	--tw-bg-opacity: 1;
	background-color: rgba(75, 85, 99, var(--tw-bg-opacity));
}
.bg-blue-500 {
	--tw-bg-opacity: 1;
	background-color: rgba(59, 130, 246, var(--tw-bg-opacity));
}
.bg-black {
	--tw-bg-opacity: 1;
	background-color: rgba(0, 0, 0, var(--tw-bg-opacity));
}
.bg-pink-500 {
	--tw-bg-opacity: 1;
	background-color: rgba(236, 72, 153, var(--tw-bg-opacity));
}
.bg-opacity-90 {
	--tw-bg-opacity: 0.9;
}
.bg-fixed {
	background-attachment: fixed;
}
.bg-local {
	background-attachment: local;
}
.bg-scroll {
	background-attachment: scroll;
}
.bg-clip-border {
	background-clip: border-box;
}
.bg-clip-padding {
	background-clip: padding-box;
}
.bg-clip-content {
	background-clip: content-box;
}
.bg-clip-text {
	-webkit-background-clip: text;
	        background-clip: text;
}
.bg-repeat {
	background-repeat: repeat;
}
.bg-no-repeat {
	background-repeat: no-repeat;
}
.bg-repeat-x {
	background-repeat: repeat-x;
}
.bg-repeat-y {
	background-repeat: repeat-y;
}
.bg-repeat-round {
	background-repeat: round;
}
.bg-repeat-space {
	background-repeat: space;
}
.fill-current {
	fill: currentColor;
}
.object-contain {
	-o-object-fit: contain;
	   object-fit: contain;
}
.object-cover {
	-o-object-fit: cover;
	   object-fit: cover;
}
.object-fill {
	-o-object-fit: fill;
	   object-fit: fill;
}
.object-none {
	-o-object-fit: none;
	   object-fit: none;
}
.object-scale-down {
	-o-object-fit: scale-down;
	   object-fit: scale-down;
}
.p-3 {
	padding: 0.75rem;
}
.p-2 {
	padding: 0.5rem;
}
.p-1 {
	padding: 0.25rem;
}
.px-4 {
	padding-left: 1rem;
	padding-right: 1rem;
}
.py-2 {
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
}
.px-20 {
	padding-left: 5rem;
	padding-right: 5rem;
}
.py-20 {
	padding-top: 5rem;
	padding-bottom: 5rem;
}
.py-4 {
	padding-top: 1rem;
	padding-bottom: 1rem;
}
.px-3 {
	padding-left: 0.75rem;
	padding-right: 0.75rem;
}
.py-7 {
	padding-top: 1.75rem;
	padding-bottom: 1.75rem;
}
.pl-3 {
	padding-left: 0.75rem;
}
.pl-20 {
	padding-left: 5rem;
}
.pt-4 {
	padding-top: 1rem;
}
.pr-1 {
	padding-right: 0.25rem;
}
.text-left {
	text-align: left;
}
.text-justify {
	text-align: justify;
}
.text-center {
	text-align: center;
}
.text-right {
	text-align: right;
}
.align-bottom {
	vertical-align: bottom;
}
.align-baseline {
	vertical-align: baseline;
}
.align-top {
	vertical-align: top;
}
.align-middle {
	vertical-align: middle;
}
.align-text-top {
	vertical-align: text-top;
}
.align-text-bottom {
	vertical-align: text-bottom;
}
.text-sm {
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.text-xs {
	font-size: 0.75rem;
	line-height: 1rem;
}
.text-2xl {
	font-size: 1.5rem;
	line-height: 2rem;
}
.text-xl {
	font-size: 1.25rem;
	line-height: 1.75rem;
}
.text-lg {
	font-size: 1.125rem;
	line-height: 1.75rem;
}
.font-light {
	font-weight: 300;
}
.font-normal {
	font-weight: 400;
}
.font-bold {
	font-weight: 700;
}
.font-medium {
	font-weight: 500;
}
.font-black {
	font-weight: 900;
}
.font-semibold {
	font-weight: 600;
}
.lowercase {
	text-transform: lowercase;
}
.capitalize {
	text-transform: capitalize;
}
.uppercase {
	text-transform: uppercase;
}
.normal-case {
	text-transform: none;
}
.italic {
	font-style: italic;
}
.not-italic {
	font-style: normal;
}
.ordinal, .slashed-zero, .lining-nums, .oldstyle-nums, .proportional-nums, .tabular-nums, .diagonal-fractions, .stacked-fractions {
	--tw-ordinal: var(--tw-empty,/*!*/ /*!*/);
	--tw-slashed-zero: var(--tw-empty,/*!*/ /*!*/);
	--tw-numeric-figure: var(--tw-empty,/*!*/ /*!*/);
	--tw-numeric-spacing: var(--tw-empty,/*!*/ /*!*/);
	--tw-numeric-fraction: var(--tw-empty,/*!*/ /*!*/);
	font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}
.ordinal {
	--tw-ordinal: ordinal;
}
.tabular-nums {
	--tw-numeric-spacing: tabular-nums;
}
.stacked-fractions {
	--tw-numeric-fraction: stacked-fractions;
}
.normal-nums {
	font-variant-numeric: normal;
}
.slashed-zero {
	--tw-slashed-zero: slashed-zero;
}
.lining-nums {
	--tw-numeric-figure: lining-nums;
}
.oldstyle-nums {
	--tw-numeric-figure: oldstyle-nums;
}
.proportional-nums {
	--tw-numeric-spacing: proportional-nums;
}
.diagonal-fractions {
	--tw-numeric-fraction: diagonal-fractions;
}
.leading-8 {
	line-height: 2rem;
}
.tracking-tighter {
	letter-spacing: -0.05em;
}
.tracking-normal {
	letter-spacing: 0em;
}
.text-gray-200 {
	--tw-text-opacity: 1;
	color: rgba(229, 231, 235, var(--tw-text-opacity));
}
.text-gray-300 {
	--tw-text-opacity: 1;
	color: rgba(209, 213, 219, var(--tw-text-opacity));
}
.text-indigo-400 {
	--tw-text-opacity: 1;
	color: rgba(129, 140, 248, var(--tw-text-opacity));
}
.text-gray-500 {
	--tw-text-opacity: 1;
	color: rgba(107, 114, 128, var(--tw-text-opacity));
}
.text-gray-400 {
	--tw-text-opacity: 1;
	color: rgba(156, 163, 175, var(--tw-text-opacity));
}
.underline {
	text-decoration: underline;
}
.line-through {
	text-decoration: line-through;
}
.no-underline {
	text-decoration: none;
}
.subpixel-antialiased {
	-webkit-font-smoothing: auto;
	-moz-osx-font-smoothing: auto;
}
.antialiased {
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}
.shadow-md {
	--tw-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow {
	--tw-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-lg {
	--tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.ring {
	--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
	--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
	box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.ring-inset {
	--tw-ring-inset: inset;
}
.ring-opacity {
	--tw-ring-opacity: 0.5;
}
.transition-all {
	transition-property: all;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-duration: 150ms;
}
.transition {
	transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
	transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
	transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-duration: 150ms;
}
.duration-700 {
	transition-duration: 700ms;
}
.duration {
	transition-duration: 150ms;
}
.\!duration {
	transition-duration: 150ms !important;
}
.ease {
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.ease-in {
	transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}
.ease-out {
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}
.ease-in-out {
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.visited\:text-gray-400:visited {
	--tw-text-opacity: 1;
	color: rgba(156, 163, 175, var(--tw-text-opacity));
}
.hover\:bg-blue-700:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(29, 78, 216, var(--tw-bg-opacity));
}
.hover\:px-2:hover {
	padding-left: 0.5rem;
	padding-right: 0.5rem;
}
.hover\:text-center:hover {
	text-align: center;
}
.hover\:font-bold:hover {
	font-weight: 700;
}
.focus\:font-medium:focus {
	font-weight: 500;
}
.focus\:ordinal:focus, .focus\:slashed-zero:focus, .focus\:lining-nums:focus, .focus\:oldstyle-nums:focus, .focus\:proportional-nums:focus, .focus\:tabular-nums:focus, .focus\:diagonal-fractions:focus, .focus\:stacked-fractions:focus {
	--tw-ordinal: var(--tw-empty,/*!*/ /*!*/);
	--tw-slashed-zero: var(--tw-empty,/*!*/ /*!*/);
	--tw-numeric-figure: var(--tw-empty,/*!*/ /*!*/);
	--tw-numeric-spacing: var(--tw-empty,/*!*/ /*!*/);
	--tw-numeric-fraction: var(--tw-empty,/*!*/ /*!*/);
	font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}
.focus\:diagonal-fractions:focus {
	--tw-numeric-fraction: diagonal-fractions;
}
.hover\:focus\:text-center:hover:focus {
	text-align: center;
}
.focus\:hover\:text-center:focus:hover {
	text-align: center;
}
.focus\:hover\:font-bold:focus:hover {
	font-weight: 700;
}
.active\:text-right:active {
	text-align: right;
}
.group:hover .group-hover\:text-center {
	text-align: center;
}
@media (min-width: 640px) {


	.sm\:prose {}


	.sm\:bg-green-500 {
		--tw-bg-opacity: 1;
		background-color: rgba(16, 185, 129, var(--tw-bg-opacity));
	}
}
@media (min-width: 768px) {


	.md\:ml-4 {
		margin-left: 1rem;
	}


	.md\:ml-10 {
		margin-left: 2.5rem;
	}


	.md\:h-10 {
		height: 2.5rem;
	}


	.md\:w-10 {
		width: 2.5rem;
	}


	.md\:pl-4 {
		padding-left: 1rem;
	}


	.md\:text-lg {
		font-size: 1.125rem;
		line-height: 1.75rem;
	}
}
@media (min-width: 1024px) {


	.lg\:prose-lg {}


	.lg\:ml-6 {
		margin-left: 1.5rem;
	}


	.lg\:grid {
		display: grid;
	}


	.lg\:w-60 {
		width: 15rem;
	}


	.lg\:grid-cols-2 {
		grid-template-columns: repeat(2, minmax(0, 1fr));
	}


	.lg\:space-y-6 > :not([hidden]) ~ :not([hidden]) {
		--tw-space-y-reverse: 0;
		margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
		margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
	}


	.lg\:px-10 {
		padding-left: 2.5rem;
		padding-right: 2.5rem;
	}


	.lg\:pl-6 {
		padding-left: 1.5rem;
	}


	.lg\:text-2xl {
		font-size: 1.5rem;
		line-height: 2rem;
	}


	.lg\:font-light {
		font-weight: 300;
	}
}
@media (min-width: 1280px) {


	.xl\:prose-2xl {}


	.xl\:focus\:font-black:focus {
		font-weight: 900;
	}
}